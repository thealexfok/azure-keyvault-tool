name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  packages: write
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with build

    - name: Update version
      run: sed -i "s/__version__ = .*/__version__ = 'v0.0.${{ github.run_number }}'/" Azure_kv_tool.py

    - name: Build with PyInstaller
      run: |
        poetry run pyinstaller Azure_kv_tool.spec

    - name: Archive build
      run: |
        mkdir -p release
        mv "dist/Azure_kv_tool.exe" "release/Azure Keyvault Tool v0.0.${{ github.run_number }}.exe"
      shell: bash

    - name: Upload to release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v0.0.${{ github.run_number }}'
        release_name: 'Release v0.0.${{ github.run_number }}'
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "release/Azure Keyvault Tool v0.0.${{ github.run_number }}.exe"
        asset_name: "Azure Keyvault Tool Windows.exe"
        asset_content_type: application/octet-stream

  build-macos:
    runs-on: macos-latest
    needs: build-windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with build

    - name: Update version
      run: sed -i '' "s/__version__ = .*/__version__ = 'v0.0.${{ github.run_number }}'/" Azure_kv_tool.py

    - name: Build with PyInstaller
      run: |
        poetry run pyinstaller Azure_kv_tool.spec

    - name: Archive build
      run: |
        mkdir -p release
        mv "dist/Azure_kv_tool" "release/Azure Keyvault Tool v0.0.${{ github.run_number }}.app"
      shell: bash

    # - name: List release directory
    #   run: ls -l release
    
    - name: Upload to release
      id: create_release_macos
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v0.0.${{ github.run_number }}-macos'
        release_name: 'Release v0.0.${{ github.run_number }}-macos'
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
        asset_path: "release/Azure Keyvault Tool v0.0.${{ github.run_number }}.app"
        asset_name: "Azure Keyvault Tool macOS.app"
        asset_content_type: application/octet-stream
